interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Note implements Node {
  id: ID!
  title: String!
  text: String!
  tags: [Tag!]
}

type User implements Node {
  id: ID!
  name: String!

  notesConnection(
    first: Int
    after: String
    last: Int
    before: String
  ): UserNotesConnection!

  tagsConnection(
    first: Int
    after: String
    last: Int
    before: String
  ): UserTagsConnection!
}

type UserNotesConnection {
  edges: [UserNoteEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type UserNoteEdge {
  cursor: ID!
  node: Note
}

type UserTagsConnection {
  edges: [UserTagEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type UserTagEdge {
  cursor: ID!
  node: Tag
}

type Tag implements Node {
  id: ID!
  label: String!
}

type Query {
  currentUser: User
}
